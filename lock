#!/bin/bash





#Colors
RED='\e[31m'
YELLOW='\e[33m'
GREEN='\e[32m'
NC='\e[0m' 







function Helper {
    echo -e "${YELLOW}This script performs straightforward file encryption using OpenSSL. ${NC}"
    echo -e "${GREEN}   usage: lock path/to/plain-file ${NC} "
    echo -e "${YELLOW}An encrypted file will be created in the same directory as the input file, with the same name and a .enc extension. ${NC}"
}




#step 1 (check if there is an argument )
function CheckArgument {
    if [[ -z "$1" ]]; then
        echo -e "${RED}Error: First Argument is mandatory ${NC}"
        echo -e "--------------------------------\n"
        Helper
        exit 1
    fi
}

CheckArgument $1

plainTextFile=$1




#step 2 (check if file exist)

function CheckExistance {
    if [[ ! -e "$1" ]]; then
    echo -e "${RED}Error: file or dir doesn't exist ${NC}"
    echo -e "--------------------------------\n"
    Helper
    exit 1
    fi
}
CheckExistance $plainTextFile


#step 2.5 check if file is readable




function CheckReadable {
    if [[ ! -r "$1" ]]; then
    echo -e "${RED}Error: file or dir does not have any read permissions ${NC}"
    echo -e "--------------------------------\n"
    Helper
    exit 1
    fi
}

CheckReadable $plainTextFile

#step 2.6
#check that the dir that contains the file is writeable

function CheckWriteable {
    if [[ ! -w "$1" ]]; then
    echo -e "${RED}Error: the Directory the contains the file is not writeable ${NC}"
    echo -e "--------------------------------\n"
    Helper
    exit 1
    fi
}


dir_path="$(dirname "$plainTextFile")"
CheckWriteable $dir_path


#step 3 take the password from user

#dk might  make --pass
#want to make this so minimal so it can even run on routers

function CheckPassword {
    if [[ $1 != $2 ]]; then
    echo -e "${RED}Error: Confirmation Doesn't Match The entered Password ${NC}"
    echo -e "--------------------------------\n"
    Helper
    exit 1
    fi
}

read -sp "Enter Password: " password
echo " "
read -sp "Confirm Password: " confirming
echo " "
CheckPassword $password $confirming








#step 4 encryption


#step 4.1 take md5sum of password

# Get MD5 hash
md5_hash=$(echo -n "$password" | md5sum | awk '{print $1}')




if [[ -f $plainTextFile ]];then
    echo -e "${YELLOW}Encrypting The File ... ${NC}"
    encrypted_file="${plainTextFile}.enc"
    openssl enc -aes-256-cbc -pbkdf2 -in "${plainTextFile}" -out "${encrypted_file}" -pass pass:"${md5_hash}" >/dev/null 2>&1
    if [[ $? -eq 0 ]]; then
        echo -e "${GREEN}Encryption successful!${NC}"
        echo -e "${GREEN}Wrote file to ${encrypted_file} ${NC}"
        echo -e "${YELLOW}Removing the original file!${NC}"
        rm "$plainTextFile"
        if [[ $? != 0 ]]; then 
            echo -e "${RED}Error: can't remove the plainText file Please remove it yourself"
            exit 1
        fi
    else
        echo -e "${RED}Encryption failed !${NC}"
        exit 1
    fi
else 
    echo -e "${YELLOW}This is a Directory compressing then encrypting ... ${NC}"
    plainTextDir="$plainTextFile"
    archive_name="${plainTextDir}.tar.gz"
    encrypted_file="${archive_name}.enc"
    tar -czf "$archive_name" "$plainTextDir" > /dev/null 2>&1
    if [[ $? != 0 ]]; then
        echo -e "${RED}Error: compressing Your Dir failed for some unknown reason ${NC}"
        exit 1
    fi
    openssl enc -aes-256-cbc -pbkdf2 -in "${archive_name}" -out "${encrypted_file}" -pass pass:"${md5_hash}" > /dev/null 2>&1


    if [[ $? -eq 0 ]]; then
        echo -e "${GREEN}Encryption successful!${NC}"
        
        
        echo -e "${GREEN}Wrote file to ${encrypted_file} ${NC}"
       # echo -e "${YELLOW}Note: We didn't remove the original directory please remove it yourself${NC}"
       #dk might make a question for removal
        echo -e "${YELLOW}trying tp remove the tar file!${NC}"
        rm "$archive_name"
        if [[ $? != 0 ]]; then 
            echo -e "${RED}Error: can't remove the archive  Please remove it yourself"
            exit 1
        fi
        echo -e "${YELLOW}trying to remove the original dir!${NC}"
        rm -rf "$plainTextDir"
        if [[ $? != 0 ]]; then 
            echo -e "${RED}Error: can't plain Dir  Please remove it yourself"
            exit 1
        fi
    else
        echo -e "${RED}Encryption failed!${NC}"
        exit 1
    fi

fi



#openssl enc -aes-256-cbc -pbkdf2 -in secret.txt -out secret.enc
#openssl enc -aes-256-cbc -pbkdf2 -in file.txt -out file.txt.enc -pass pass:yourPasswordHere 
